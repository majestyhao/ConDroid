(set-option :produce-models true)

(declare-const $I$0 Int)
(declare-const $L$sym_java_lang_System_currentTimeMillis__J Int)
(declare-const $I$1 Int)
(declare-const $I$2 Bool)
(define-fun my_to_int ((x Real)) Int (if (>= x 0.0) (to_int x) (- (to_int (- x)))))
(define-fun l2i ((x Int)) Int x)
(define-fun l2f ((x Int)) Real (to_real x))
(define-fun l2d ((x Int)) Real (to_real x))
(assert (= $I$0 (l2i $L$sym_java_lang_System_currentTimeMillis__J)))
(assert (= $I$1 (+ $I$0 18)))
(assert (not (>= $I$1 35)))
(assert (= (Contains "SEED" "gotcha") $I$2))
//(assert (Contains $I$2 "gotcha"))
(assert (not $I$2 ))
(check-sat)
(get-model)